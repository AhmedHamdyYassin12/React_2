{"version":3,"sources":["Components/Notes/NotesContainer.js","Components/Notes/NotesList.js","Components/Notes/Note.js","App.js","index.js"],"names":["NotesContainer","props","className","children","NotesList","Note","title","active","noteClicked","onClick","App","useState","notes","setNotes","setTitle","content","setContent","selectedNote","setSelectedNode","creating","setCreating","editing","setEditing","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","saveToLocalStorage","value","map","note","noteId","id","type","name","placeholder","onChange","event","target","rows","href","updateNotes","findIndex","Date","updatedNotes","length","find","onEditNoteHandler","deleteNote","splice","getPreview","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96247437.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NotesContainer = (props) => {\r\n  return <div className=\"notes-section\">{props.children}</div>;\r\n};\r\n\r\nexport default NotesContainer;\r\n","import React from \"react\";\r\n\r\nconst NotesList = (props) => {\r\n  return <ul className=\"notes-list\">{props.children}</ul>;\r\n};\r\n\r\nexport default NotesList;\r\n","import React from \"react\";\r\n\r\nconst Note = (props) => {\r\n  const { title, active, noteClicked } = props;\r\n\r\n  return (\r\n    <li className={`note-item  ${active && \"active\"}`} onClick={noteClicked}>\r\n      {title}\r\n    </li>\r\n  );\r\n};\r\nexport default Note;\r\n","import react, { useState, useEffect } from \"react\";\nimport Preview from \"./Components/Preview\";\nimport NotesContainer from \"./Components/Notes/NotesContainer\";\nimport NotesList from \"./Components/Notes/NotesList\";\nimport Note from \"./Components/Notes/Note\";\nimport \"./App.css\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNode] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"notes\")) {\n      setNotes(JSON.parse(localStorage.getItem(\"notes\")));\n    } else {\n      localStorage.setItem(\"notes\", JSON.stringify([]));\n    }\n  }, []);\n\n  const saveToLocalStorage = (value) => {\n    localStorage.setItem(\"notes\", JSON.stringify(value));\n  };\n\n  const getAddNote = () => {\n    const onTitleChangeHandler = (event) => {\n      setTitle(event.target.value);\n      // console.log(title);\n    };\n    const onContentChangeHandler = (event) => {\n      setContent(event.target.value);\n      // console.log(content);\n    };\n    const onSaveNoteHandler = () => {\n      if (editing) {\n        const updateNotes = [...notes];\n        const noteIndex = notes.findIndex((note) => note.id === selectedNote);\n        updateNotes[noteIndex] = {\n          id: selectedNote,\n          title: title,\n          content: content,\n        };\n        saveToLocalStorage(updateNotes);\n        setNotes(updateNotes);\n      } else {\n        const note = {\n          id: new Date(),\n          title: title,\n          content: content,\n        };\n        const updatedNotes = [...notes, note];\n        saveToLocalStorage(updatedNotes);\n        setNotes(updatedNotes);\n        setSelectedNode(note.id);\n      }\n      setCreating(false);\n      setEditing(false);\n      setTitle(\"\");\n      setContent(\"\");\n    };\n    return (\n      <div>\n        <h2>Add New Note</h2>\n        <div>\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"form-input mb-30\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={onTitleChangeHandler}\n          />\n\n          <textarea\n            rows=\"10\"\n            name=\"content\"\n            className=\"form-input\"\n            placeholder=\"text\"\n            value={content}\n            onChange={onContentChangeHandler}\n          />\n\n          <a href=\"#\" className=\"button green\" onClick={onSaveNoteHandler}>\n            Save\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return <h2>There is no notes</h2>;\n    }\n    if (!selectedNote) {\n      return <h2>Choose one note</h2>;\n    }\n\n    const note = notes.find((note) => {\n      return note.id === selectedNote;\n    });\n\n    const onEditNoteHandler = (note) => {\n      setTitle(note.title);\n      setContent(note.content);\n      setEditing(true);\n      setCreating(true);\n    };\n    const onDeleteNoteHandler = () => {\n      const updateNotes = [...notes];\n      const deleteNote = updateNotes.findIndex(\n        (note) => note.id === selectedNote\n      );\n      notes.splice(deleteNote, 1);\n      saveToLocalStorage(notes);\n      setNotes(notes);\n      setSelectedNode(null);\n    };\n\n    return (\n      <div>\n        <div className=\"note-operations\">\n          <a href=\"#\" onClick={() => onEditNoteHandler(note)}>\n            <i className=\"fa fa-pencil-alt\" />\n          </a>\n          <a href=\"#\">\n            <i className=\"fa fa-trash\" onClick={onDeleteNoteHandler} />\n          </a>\n        </div>\n        <div>\n          <h2>{note.title}</h2>\n          <p>{note.content}</p>\n        </div>\n      </div>\n    );\n  };\n  const addNoteHandler = () => {\n    setCreating(true);\n  };\n\n  const noteClikedHandler = (noteId) => {\n    setSelectedNode(noteId);\n  };\n  return (\n    <div className=\"App\">\n      <NotesContainer>\n        <NotesList>\n          {notes.map((note) => {\n            return (\n              <Note\n                key={note.id}\n                title={note.title}\n                noteClicked={() => noteClikedHandler(note.id)}\n                active={note.id === selectedNote}\n              />\n            );\n          })}\n        </NotesList>\n        <button className=\"add-btn\" onClick={addNoteHandler}>\n          +\n        </button>\n      </NotesContainer>\n      <div className=\"preview-section\">\n        {creating ? getAddNote() : getPreview()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}