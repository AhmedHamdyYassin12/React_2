{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\React\\\\notes\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from \"react\";\nimport Preview from \"./Components/Preview\";\nimport NotesContainer from \"./Components/Notes/NotesContainer\";\nimport NotesList from \"./Components/Notes/NotesList\";\nimport Note from \"./Components/Notes/Note\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNode] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [editing, setEditing] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"notes\")) {\n      setNotes(JSON.parse(localStorage.getItem(\"notes\")));\n    } else {\n      localStorage.setItem(\"notes\", JSON.stringify([]));\n    }\n  }, []);\n\n  const saveToLocalStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  const getAddNote = () => {\n    const onTitleChangeHandler = event => {\n      setTitle(event.target.value); // console.log(title);\n    };\n\n    const onContentChangeHandler = event => {\n      setContent(event.target.value); // console.log(content);\n    };\n\n    const onSaveNoteHandler = () => {\n      if (editing) {\n        const updateNotes = [...notes];\n        const noteIndex = notes.findIndex(note => note.id === selectedNote);\n        updateNotes[noteIndex] = {\n          id: selectedNote,\n          title: title,\n          content: content\n        };\n        setNotes(updateNotes);\n      } else {\n        const note = {\n          id: new Date(),\n          title: title,\n          content: content\n        };\n        const updatedNotes = [...notes, note];\n        setNotes(updatedNotes);\n        setSelectedNode(note.id);\n      }\n\n      setCreating(false);\n      setEditing(false);\n      setTitle(\"\");\n      setContent(\"\");\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          className: \"form-input mb-30\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: onTitleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"10\",\n          name: \"content\",\n          className: \"form-input\",\n          placeholder: \"text\",\n          value: content,\n          onChange: onContentChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"button green\",\n          onClick: onSaveNoteHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"There is no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (!selectedNote) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose one note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }, this);\n    }\n\n    const note = notes.find(note => {\n      return note.id === selectedNote;\n    });\n\n    const onEditNoteHandler = note => {\n      setTitle(note.title);\n      setContent(note.content);\n      setEditing(true);\n      setCreating(true);\n    };\n\n    const onDeleteNoteHandler = () => {\n      const updateNotes = [...notes];\n      const deleteNote = updateNotes.findIndex(note => note.id === selectedNote);\n      notes.splice(deleteNote, 1);\n      setNotes(notes);\n      setSelectedNode(null);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-operations\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => onEditNoteHandler(note),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-pencil-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-trash\",\n            onClick: onDeleteNoteHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  };\n\n  const addNoteHandler = () => {\n    setCreating(true);\n  };\n\n  const noteClikedHandler = noteId => {\n    setSelectedNode(noteId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NotesContainer, {\n      children: [/*#__PURE__*/_jsxDEV(NotesList, {\n        children: notes.map(note => {\n          return /*#__PURE__*/_jsxDEV(Note, {\n            title: note.title,\n            noteClicked: () => noteClikedHandler(note.id),\n            active: note.id === selectedNote\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: addNoteHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-section\",\n      children: creating ? getAddNote() : getPreview()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"X5TwkwBbpvAc+3Zz+ZoEUUgrQyw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Programming/React/notes/src/App.js"],"names":["react","useState","useEffect","Preview","NotesContainer","NotesList","Note","App","notes","setNotes","title","setTitle","content","setContent","selectedNote","setSelectedNode","creating","setCreating","editing","setEditing","localStorage","getItem","JSON","parse","setItem","stringify","saveToLocalStorage","key","value","getAddNote","onTitleChangeHandler","event","target","onContentChangeHandler","onSaveNoteHandler","updateNotes","noteIndex","findIndex","note","id","Date","updatedNotes","getPreview","length","find","onEditNoteHandler","onDeleteNoteHandler","deleteNote","splice","addNoteHandler","noteClikedHandler","noteId","map"],"mappings":"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","sourcesContent":["import react, { useState, useEffect } from \"react\";\nimport Preview from \"./Components/Preview\";\nimport NotesContainer from \"./Components/Notes/NotesContainer\";\nimport NotesList from \"./Components/Notes/NotesList\";\nimport Note from \"./Components/Notes/Note\";\nimport \"./App.css\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNode] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"notes\")) {\n      setNotes(JSON.parse(localStorage.getItem(\"notes\")));\n    } else {\n      localStorage.setItem(\"notes\", JSON.stringify([]));\n    }\n  }, []);\n\n  const saveToLocalStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  const getAddNote = () => {\n    const onTitleChangeHandler = (event) => {\n      setTitle(event.target.value);\n      // console.log(title);\n    };\n    const onContentChangeHandler = (event) => {\n      setContent(event.target.value);\n      // console.log(content);\n    };\n    const onSaveNoteHandler = () => {\n      if (editing) {\n        const updateNotes = [...notes];\n        const noteIndex = notes.findIndex((note) => note.id === selectedNote);\n        updateNotes[noteIndex] = {\n          id: selectedNote,\n          title: title,\n          content: content,\n        };\n        setNotes(updateNotes);\n      } else {\n        const note = {\n          id: new Date(),\n          title: title,\n          content: content,\n        };\n        const updatedNotes = [...notes, note];\n        setNotes(updatedNotes);\n        setSelectedNode(note.id);\n      }\n      setCreating(false);\n      setEditing(false);\n      setTitle(\"\");\n      setContent(\"\");\n    };\n    return (\n      <div>\n        <h2>Add New Note</h2>\n        <div>\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"form-input mb-30\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={onTitleChangeHandler}\n          />\n\n          <textarea\n            rows=\"10\"\n            name=\"content\"\n            className=\"form-input\"\n            placeholder=\"text\"\n            value={content}\n            onChange={onContentChangeHandler}\n          />\n\n          <a href=\"#\" className=\"button green\" onClick={onSaveNoteHandler}>\n            Save\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return <h2>There is no notes</h2>;\n    }\n    if (!selectedNote) {\n      return <h2>Choose one note</h2>;\n    }\n\n    const note = notes.find((note) => {\n      return note.id === selectedNote;\n    });\n\n    const onEditNoteHandler = (note) => {\n      setTitle(note.title);\n      setContent(note.content);\n      setEditing(true);\n      setCreating(true);\n    };\n    const onDeleteNoteHandler = () => {\n      const updateNotes = [...notes];\n      const deleteNote = updateNotes.findIndex(\n        (note) => note.id === selectedNote\n      );\n      notes.splice(deleteNote, 1);\n      setNotes(notes);\n      setSelectedNode(null);\n    };\n\n    return (\n      <div>\n        <div className=\"note-operations\">\n          <a href=\"#\" onClick={() => onEditNoteHandler(note)}>\n            <i className=\"fa fa-pencil-alt\" />\n          </a>\n          <a href=\"#\">\n            <i className=\"fa fa-trash\" onClick={onDeleteNoteHandler} />\n          </a>\n        </div>\n        <div>\n          <h2>{note.title}</h2>\n          <p>{note.content}</p>\n        </div>\n      </div>\n    );\n  };\n  const addNoteHandler = () => {\n    setCreating(true);\n  };\n\n  const noteClikedHandler = (noteId) => {\n    setSelectedNode(noteId);\n  };\n  return (\n    <div className=\"App\">\n      <NotesContainer>\n        <NotesList>\n          {notes.map((note) => {\n            return (\n              <Note\n                key={note.id}\n                title={note.title}\n                noteClicked={() => noteClikedHandler(note.id)}\n                active={note.id === selectedNote}\n              />\n            );\n          })}\n        </NotesList>\n        <button className=\"add-btn\" onClick={addNoteHandler}>\n          +\n        </button>\n      </NotesContainer>\n      <div className=\"preview-section\">\n        {creating ? getAddNote() : getPreview()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}