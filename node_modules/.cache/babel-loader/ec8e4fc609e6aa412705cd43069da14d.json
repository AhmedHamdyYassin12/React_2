{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\React\\\\notes\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState } from \"react\";\nimport Preview from \"./Components/Preview\";\nimport NotesContainer from \"./Components/Notes/NotesContainer\";\nimport NotesList from \"./Components/Notes/NotesList\";\nimport Note from \"./Components/Notes/Note\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNode] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [editing, setEditing] = useState(false);\n\n  const getAddNote = () => {\n    const onTitleChangeHandler = event => {\n      setTitle(event.target.value);\n      console.log(title);\n    };\n\n    const onContentChangeHandler = event => {\n      setContent(event.target.value);\n      console.log(content);\n    };\n\n    const onSaveNoteHandler = () => {\n      const note = {\n        id: new Date(),\n        title: title,\n        content: content\n      };\n      const updatedNotes = [...notes, note];\n      setNotes(updatedNotes);\n      setCreating(false);\n      setSelectedNode(note.id);\n      setTitle(\"\");\n      setContent(\"\");\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          className: \"form-input mb-30\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: onTitleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"10\",\n          name: \"content\",\n          className: \"form-input\",\n          placeholder: \"text\",\n          value: content,\n          onChange: onContentChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"button green\",\n          onClick: onSaveNoteHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"There is no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (!selectedNote) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose one note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this);\n    }\n\n    const note = notes.find(note => {\n      return note.id === selectedNote;\n    });\n\n    const onEditNoteHandler = note => {\n      // setCreating(true);\n      // title = note.title;\n      // content = note.content;\n      console.log(\"i am editing \" + note.title);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-operations\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => onEditNoteHandler(note),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-pencil-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  };\n\n  const addNoteHandler = () => {\n    setCreating(true);\n  };\n\n  const noteClikedHandler = noteId => {\n    setSelectedNode(noteId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NotesContainer, {\n      children: [/*#__PURE__*/_jsxDEV(NotesList, {\n        children: notes.map(note => {\n          return /*#__PURE__*/_jsxDEV(Note, {\n            title: note.title,\n            noteClicked: () => noteClikedHandler(note.id),\n            active: note.id === selectedNote\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        onClick: addNoteHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-section\",\n      children: creating ? getAddNote() : getPreview()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cxM3UXSWkTuImNIAIKRMRZK3zd4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Programming/React/notes/src/App.js"],"names":["react","useState","Preview","NotesContainer","NotesList","Note","App","notes","setNotes","title","setTitle","content","setContent","selectedNote","setSelectedNode","creating","setCreating","editing","setEditing","getAddNote","onTitleChangeHandler","event","target","value","console","log","onContentChangeHandler","onSaveNoteHandler","note","id","Date","updatedNotes","getPreview","length","find","onEditNoteHandler","addNoteHandler","noteClikedHandler","noteId","map"],"mappings":"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","sourcesContent":["import react, { useState } from \"react\";\nimport Preview from \"./Components/Preview\";\nimport NotesContainer from \"./Components/Notes/NotesContainer\";\nimport NotesList from \"./Components/Notes/NotesList\";\nimport Note from \"./Components/Notes/Note\";\nimport \"./App.css\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNode] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [editing, setEditing] = useState(false);\n\n  const getAddNote = () => {\n    const onTitleChangeHandler = (event) => {\n      setTitle(event.target.value);\n      console.log(title);\n    };\n    const onContentChangeHandler = (event) => {\n      setContent(event.target.value);\n      console.log(content);\n    };\n    const onSaveNoteHandler = () => {\n      const note = {\n        id: new Date(),\n        title: title,\n        content: content,\n      };\n      const updatedNotes = [...notes, note];\n      setNotes(updatedNotes);\n      setCreating(false);\n      setSelectedNode(note.id);\n      setTitle(\"\");\n      setContent(\"\");\n    };\n    return (\n      <div>\n        <h2>Add New Note</h2>\n        <div>\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"form-input mb-30\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={onTitleChangeHandler}\n          />\n\n          <textarea\n            rows=\"10\"\n            name=\"content\"\n            className=\"form-input\"\n            placeholder=\"text\"\n            value={content}\n            onChange={onContentChangeHandler}\n          />\n\n          <a href=\"#\" className=\"button green\" onClick={onSaveNoteHandler}>\n            Save\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return <h2>There is no notes</h2>;\n    }\n    if (!selectedNote) {\n      return <h2>Choose one note</h2>;\n    }\n\n    const note = notes.find((note) => {\n      return note.id === selectedNote;\n    });\n\n    const onEditNoteHandler = (note) => {\n      // setCreating(true);\n      // title = note.title;\n      // content = note.content;\n      console.log(\"i am editing \" + note.title);\n    };\n\n    return (\n      <div>\n        <div className=\"note-operations\">\n          <a href=\"#\" onClick={() => onEditNoteHandler(note)}>\n            <i className=\"fa fa-pencil-alt\" />\n          </a>\n          <a href=\"#\">\n            <i className=\"fa fa-trash\" />\n          </a>\n        </div>\n        <div>\n          <h2>{note.title}</h2>\n          <p>{note.content}</p>\n        </div>\n      </div>\n    );\n  };\n  const addNoteHandler = () => {\n    setCreating(true);\n  };\n\n  const noteClikedHandler = (noteId) => {\n    setSelectedNode(noteId);\n  };\n  return (\n    <div className=\"App\">\n      <NotesContainer>\n        <NotesList>\n          {notes.map((note) => {\n            return (\n              <Note\n                key={note.id}\n                title={note.title}\n                noteClicked={() => noteClikedHandler(note.id)}\n                active={note.id === selectedNote}\n              />\n            );\n          })}\n        </NotesList>\n        <button className=\"add-btn\" onClick={addNoteHandler}>\n          +\n        </button>\n      </NotesContainer>\n      <div className=\"preview-section\">\n        {creating ? getAddNote() : getPreview()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}